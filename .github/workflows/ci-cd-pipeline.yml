name: CI/CD Pipeline - Build, Test, Deploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Build and Test Frontend
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Build application
      run: npm run build
      
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: build/

  # Job 2: Deploy Firebase Functions
  deploy-firebase-functions:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Install function dependencies
      run: |
        cd functions
        npm ci
        npm run build
        
    - name: Deploy to Firebase
      run: firebase deploy --only functions --token "${{ secrets.FIREBASE_TOKEN }}"
      env:
        GOOGLE_TRANSLATE_API_KEY: ${{ secrets.GOOGLE_TRANSLATE_API_KEY }}
        GOOGLE_LANGUAGE_API_KEY: ${{ secrets.GOOGLE_LANGUAGE_API_KEY }}

  # Job 3: Deploy to Vercel
  deploy-vercel:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        vercel-args: '--prod'

  # Job 4: Update deployment status
  update-status:
    needs: [deploy-firebase-functions, deploy-vercel]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Update deployment status
      run: |
        echo "üöÄ Deployment completed successfully!"
        echo "‚úÖ Firebase Functions deployed"
        echo "‚úÖ Frontend deployed to Vercel"
        echo "üåê Your app is now live!"
